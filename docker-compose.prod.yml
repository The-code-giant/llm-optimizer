version: '3.8'
services:
  postgres:
    image: postgres:16-alpine
    container_name: clever-search-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: cleaver_search_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - clever-search-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cleaver_search_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: clever-search-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - clever-search-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: clever-search-backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/cleaver_search_dev
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-jwt
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
      FORCE_COLOR: 1
    ports:
      - "3001:3001"
      - "4983:4983"
    networks:
      - clever-search-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    dns:
      - 8.8.8.8
      - 8.8.4.4
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  clever-search-network:
    driver: bridge 