# Production Dockerfile for Backend

# 1. Builder Stage: Build the application
FROM node:20-alpine AS builder

WORKDIR /app

# Install necessary build tools
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    && ln -sf python3 /usr/bin/python

# Copy package files first for better caching
COPY package.json ./
COPY package-lock.json ./

# Clear npm cache and install dependencies
RUN npm cache clean --force

# Try npm ci first, fallback to npm install if it fails
RUN npm ci --only=production=false --no-audit --no-fund || npm install

# Copy the rest of the source code
COPY . .

# Build the application
RUN npm run build

# Prune dev dependencies for a smaller production image
RUN npm prune --production


# 2. Production Stage: Create the final, lean image
FROM node:20-alpine AS production

WORKDIR /app

# Copy only the necessary production artifacts from the builder stage
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package*.json ./

# Expose the application port
EXPOSE 3001

# Run the application
CMD [ "node", "dist/index.js" ] 