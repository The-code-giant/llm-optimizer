version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: ai-seo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_seo_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c max_connections=100 -c shared_buffers=128MB -c effective_cache_size=256MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_seo_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue  
  redis:
    image: redis:7-alpine
    container_name: ai-seo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 384mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Backend API Server
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.prod
    container_name: ai-seo-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      # Internal database connection
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_seo_prod
      # Redis connection
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: redis://redis:6379
      # Your app secrets
      JWT_SECRET: ${JWT_SECRET}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY:-}
      CORS_ORIGIN: ${CORS_ORIGIN:-*}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local 