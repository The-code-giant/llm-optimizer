version: '3.8'

services:
  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: ai-seo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-seo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: ai-seo-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      # These will be overridden by environment variables in AWS
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: redis://redis:6379
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: ${CORS_ORIGIN}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
    ports:
      - "3001:3001"
    networks:
      - ai-seo-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local

networks:
  ai-seo-network:
    driver: bridge 